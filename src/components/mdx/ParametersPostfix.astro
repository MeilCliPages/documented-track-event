---
import { getCollection } from "astro:content";
import CommonTable from "./CommonTable.astro";
import { validateCommon, parameterPostfixType } from "../../template";
import { undefined } from "astro:schema";

const props = Astro.props;

const platforms = props.platforms != undefined ? (props.platforms as string).split(",") : [];

const commonCollection = await getCollection("common");
const commons = await Promise.all(
    commonCollection.map(async (x) => {
        const renderedCommon = await x.render();
        const common = validateCommon(
            x.data.name,
            x.data.description,
            x.data.platforms,
            renderedCommon.remarkPluginFrontmatter,
        );
        return common;
    }),
);
---

<div {...props}>
    {props.type != parameterPostfixType && <slot />}
    {
        props.type == parameterPostfixType &&
            commons
                .filter((x) => x.platforms.filter((y) => platforms.includes(y)).length != 0)
                .map((x) => <CommonTable common={x} />)
    }
</div>
