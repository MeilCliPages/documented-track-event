---
import { type CollectionEntry, getCollection } from "astro:content";
import { unified } from "unified";
import remarkParse from "remark-parse";
import remarkGfm from "remark-gfm";
import remarkRehype from "remark-rehype";
import rehypeStarryNight from "rehype-starry-night";
import rehypeStringify from "rehype-stringify";
import { all } from "@wooorm/starry-night";
import CommonPage from "../../layouts/CommonPage.astro";
import Link from "../../components/mdx/Link.astro";
import { validateCommon, generateAndroidCommon, generateWebCommon } from "../../template";

type Common = CollectionEntry<"common">;

export async function getStaticPaths() {
    const commons = await getCollection("common");
    return commons.map((common: Common) => ({
        params: { slug: common.slug },
        props: common,
    }));
}
type Props = CollectionEntry<"common">;

const common = Astro.props;
const { Content, remarkPluginFrontmatter } = await common.render();

async function convertMarkdownToHtml(markdown: string): Promise<string> {
    const file = await unified()
        .use(remarkParse)
        .use(remarkGfm)
        .use(remarkRehype, { allowDangerousHtml: true })
        .use(rehypeStarryNight, { grammars: all })
        .use(rehypeStringify, { allowDangerousHtml: true })
        .process(markdown);
    return file.toString();
}

const rawCommon = validateCommon(
    common.data.name,
    common.data.description,
    common.data.platforms,
    remarkPluginFrontmatter,
);
const androidCommonHtml = common.data.platforms.includes("android")
    ? await convertMarkdownToHtml(
          `<details>\n<summary>Android</summary>\n\n\`\`\`kt\n${generateAndroidCommon(rawCommon)}\n\`\`\`\n</details>`,
      )
    : null;
const webCommonHtml = common.data.platforms.includes("web")
    ? await convertMarkdownToHtml(
          `<details>\n<summary>Web</summary>\n\n\`\`\`ts\n${generateWebCommon(rawCommon)}\n\`\`\`\n</details>`,
      )
    : null;
---

<CommonPage name={common.data.name} description={common.data.description} platforms={common.data.platforms}>
    <Content components={{ a: Link }} />
    <h2>Generated Code</h2>
    {androidCommonHtml != null && <div set:html={androidCommonHtml} />}
    {webCommonHtml != null && <div set:html={webCommonHtml} />}
</CommonPage>
